---
# Ansible Playbook to upgrade Cisco IOS 

- name: Upgrade CISCO IOS for 2960X/R switches
  hosts: IOS_UPGRADE-1

  vars: 
    upgrade_ios_version: 15.2(7)E3

  tasks:
    - name: CHECK CURRENT VERSION
      ios_facts:

    - debug: 
        msg: 
        - "Current version is {{ ansible_net_version }}"
        - "Upgrade to IOS release 15.2(7)E3"

    - debug: 
        msg: 
        - "Image is not compliant and will be upgraded"

      when: ansible_net_version != upgrade_ios_version

## Create backup folder for today 

- hosts: localhost

  tasks:
   - name: Get ansible date/time facts
     setup:
       filter: "ansible_date_time"
       gather_subset: "!all"

   - name: Store DTG as fact
     set_fact:
       DTG: "{{ ansible_date_time.date }}"

   - name: Create Directory {{hostvars.localhost.DTG}}
     file:
      path: /home/ansible_project/backup/Sites/{{hostvars.localhost.DTG}}
      state: directory
  run_once: true

## Take backup of running config

- hosts: IOS_UPGRADE

  tasks:
   - name: Backup Running Configuration
     ios_command:
       commands: show run 
     register: config

   - name: Save output to /home/ansible_project/backup/Sites
     copy:
       content: "{{config.stdout[0]}}"
       dest: "/home/ansible_project/backup/Sites/{{hostvars.localhost.DTG}}/{{inventory_hostname}}-{{hostvars.localhost.DTG}}-running-config.txt"

## Gather command output from the switch
       
- hosts: IOS_UPGRADE

  vars:
    command_list:
      - show clock
    # - show users
    # - show platform
      - show power inline
      - show vlan
      - show etherchannel summary
      - show cdp neigh
      - sh switch stack-ports
      - show switch
    # - show switch stack-ports summary
      - show env all
      - show cdp neighbors detail
      - show version
    # - show license usage
    # - show license summary
      - show inventory raw
      - show boot
      - dir
      - show int status | inc connected
      - show int status
      - show arp
      - show ip interface brief

## Save the gathered config in a text file

  tasks:
   - name: Run the SHOW commands and save output 
     ios_command:
       commands: "{{ command_list }}"
     register: showoutput

   - name: "Put all the files together into one nice text file"
     template: 
       src: template.j2 
       dest: "/home/ansible_project/backup/Sites/{{hostvars.localhost.DTG}}/{{ inventory_hostname }}-{{hostvars.localhost.DTG}}-showoutput.txt"


## Enable SCP server on Cisco Switch

   - name: enable scp server on cisco switch 
     ios_config:
       lines:
         - ip scp server enable

## Copy software to target device 

   - name: Copy ios Image // This could take up to 30 minutes
     ansible.netcommon.net_put: 
       src: "/home/ansible_project/production_ios_image/C2960XR/c2960x-universalk9-mz.152-7.E3.bin"
       dest: "flash:/c2960x-universalk9-mz.152-7.E3.bin"
     vars: 
       ansible_command_timeout: 3600

## SAVE the Running Config 

   - name: Save running config 
     ios_config:
       save_when: always 

## Verify MD5 Hash of the IOS before setting the boot variables

   - name: VERIFY MD5 hash of new uploaded IOS
     cisco.ios.ios_command:
       commands: "verify /md5 flash:/c2960x-universalk9-mz.152-7.E3.bin"
     register: md5_result

   - debug: 
       msg: 
       - "Uploaded Image is Verified and ready for the upgrade"

     when: verified_md5 == md5_result.stdout[0].split(' = ')[1]


## Setup the boot variable on cisco switch

   - name: Setting the boot variable on cisco switch
     ios_config:
       lines:
         - boot system "flash:/c2960x-universalk9-mz.152-7.E3.bin"
     when: verified_md5 == md5_result.stdout[0].split(' = ')[1]
